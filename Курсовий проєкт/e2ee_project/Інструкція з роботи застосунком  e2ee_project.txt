Інструкція з розгортання та використання застосунку  e2ee_project

1. Мета проекту
Безпечний обмін повідомленнями з використанням наскрізного шифрування (End-to-End Encryption, E2EE). 
Застосунок гарантує конфіденційність, цілісність та аутентифікацію завдяки сучасним криптографічним алгоритмам.

2. Основні складові
Сервер:
-	Використовує TLS для безпечного підключення клієнтів.
-	Реалізує обробку повідомлень та керування сесіями.
Клієнт:
-	Шифрує та розшифровує повідомлення локально за допомогою ChaCha20 + Poly1305.
-	Підключається до сервера через TLS.
Криптографічна база:
-	Алгоритм шифрування: ChaCha20 із динамічною зміною ключів.
-	Протокол узгодження ключів: ECDH на еліптичних кривих.
-	Аутентифікація: сертифікати X.509.

3. Інструкція з розгортання
Передумови: встановіть Python 3.10+.
Встановіть залежності: pip install -r requirements.txt
Згенеруйте сертифікати:
-	для сервера: server.crt, server.key;
-	для кожного клієнта: client_name.crt, client_name.key;
-	CA-сертифікат: ca.crt.
Інструкція з генерації сертифікатів:
openssl req -x509 -newkey rsa:2048 -keyout ca.key -out ca.crt -days 365 -nodes
openssl req -newkey rsa:2048 -keyout server.key -out server.csr -nodes
openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 365

Запуск сервера
-	Перейдіть до директорії проєкту: cd e2ee_project
-	Запустіть сервер: python server.py
-	Сервер очікуватиме підключень на 127.0.0.1:12345.

Запуск клієнта
-	Переконайтеся, що сертифікати клієнта знаходяться у директорії ./certs/client_certs/<ClientName>/.
-	Запустіть клієнт: python client.py <ClientName>
-	Увійдіть у сесію обміну повідомленнями. 
-	Для виходу введіть команду “exit”.

4. Тестування
Запустіть сервер і щонайменше двох клієнтів.
Перевірте, що клієнти можуть обмінюватися повідомленнями.
Переконайтеся, що дані захищені:
-	Спробуйте змінити повідомлення в транзиті (переконайтесь, що зміни виявляються).
-	Перевірте, що сторонній клієнт без сертифікатів не може підключитися.

5. Протоколи логування
Сервер записує:
-	Час підключення та відключення клієнтів.
-	IP-адреси клієнтів.
-	Помилки під час сеансу.
-	Логи знаходяться у файлі server.log.

6. Відомі проблеми та обмеження
Наразі ключі ротації не зберігаються між сеансами.
Сертифікати потрібно генерувати вручну.
