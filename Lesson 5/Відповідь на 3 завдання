Щоб генерувати криптографічний ключ для шифрування даних за допомогою AES-128, найкраще використовувати метод, який включає хешування з сіллю для забезпечення безпеки та уникнення атак типу "rainbow table". 
Оскільки паролі користувачів часто мають низьку ентропію, важливо використовувати сильні хеш-функції, такі як PBKDF2, bcrypt чи scrypt, для того щоб забезпечити достатню складність і стійкість до атак. 
Для реалізації необхідної функціональності можна скористатися бібліотекою pycryptodome або cryptography.
Я обираю метод PBKDF2 (Password-Based Key Derivation Function 2) з хеш-функцією SHA-256, щоб згенерувати ключ для AES-128 (який має 128 біт, тобто 16 байт) на основі пароля та сільованого значення.
Для забезпечення унікальності хешування буде потрібна сіль. Для кожного користувача сіль повинна бути унікальною, щоб навіть за однакових паролів генерувалися різні ключі. Вона додається до пароля, і разом з паролем проходить через хеш-функцію. У результаті, навіть однакові паролі дадуть різні ключі, якщо сіль різна. Такий підхід забезпечує високий рівень безпеки і є стійким до атак через повторне використання паролів.
